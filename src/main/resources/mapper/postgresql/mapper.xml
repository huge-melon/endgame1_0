<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shixin.endgame.dao.postgresql.PostgresqlMapper">


    <!--Oracle 获取所有表-->
    <select id="getTableName" resultType="java.util.Map">
       SELECT table_name as "TABLE_NAME" from information_schema.tables where table_schema= 'public'
    </select>

    <!--如何指定数据库，不需要考虑指定数据库，到sql语句这一层时已经找到了数据库-->

    <select id="getTableData" resultType="java.util.Map">
        select * from ${table_name}
    </select>


    <!--获取表中的元数据-->
    <select id="getTableMetaData" resultType="java.util.Map">
        SELECT col_description(a.attrelid,a.attnum) as "COLUMN_COMMENT",pg_type.typname as "COLUMN_TYPE",a.attname as "COLUMN_NAME", a.attnotnull as "IS_NULLABLE"
          FROM pg_class as c,pg_attribute as a inner join pg_type on pg_type.oid = a.atttypid
          where c.relname = #{table_name} and a.attrelid = c.oid and a.attnum>0
    </select>

    <select id="getPriKey" resultType="java.util.Map">
        select pg_attribute.attname as "COLUMN_KEY" from
            pg_constraint  inner join pg_class
            on pg_constraint.conrelid = pg_class.oid
            inner join pg_attribute on pg_attribute.attrelid = pg_class.oid
            and  pg_attribute.attnum = pg_constraint.conkey[1]
            inner join pg_type on pg_type.oid = pg_attribute.atttypid
            where pg_class.relname = #{table_name}
            and pg_constraint.contype='p'

    </select>
    <!--删除表中重复数据,如果表没有主键该怎么办-->
    <delete id="delDuplicatedData">
        DELETE FROM ${table_name} WHERE ( ${columns_name} ) IN (
	        SELECT ${columns_name} FROM
		        ( SELECT ${columns_name} FROM ${table_name} GROUP BY ${columns_name} HAVING count( ${pri_name} ) > 1 ) AS tmp1 )
	            AND ${table_id} NOT IN ( SELECT ${table_id} FROM
	                ( SELECT min( ${table_id} ) ${table_id} FROM ${table_name} GROUP BY ${columns_name} HAVING count( ${pri_name} ) > 1 ) AS tmp2)
    </delete>

    <!--与条件删除表项为空的行and方法-->
    <delete id="delDataByNullAnd">
        delete from ${table_name} where
        <foreach collection="columns_name" item="columns" separator=" is NULL and ">
            ${columns}
        </foreach>
        is null
    </delete>
    <!--与条件删除表项为空的行or方法-->
    <delete id="delDataByNullOr">
        delete from ${table_name} where
        <foreach collection="columns_name" item="columns" separator=" is NULL or ">
            ${columns}
        </foreach>
        is null
    </delete>
</mapper>